#
# Autogenerated by Thrift Compiler (0.9.2)
#
# DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
#

require 'thrift'
require_relative 'greeter_types'

module Greeter
  class Client
    include ::Thrift::Client

    def greeting(name)
      send_greeting(name)
      return recv_greeting()
    end

    def send_greeting(name)
      send_message('greeting', Greeting_args, :name => name)
    end

    def recv_greeting()
      result = receive_message(Greeting_result)
      return result.success unless result.success.nil?
      raise ::Thrift::ApplicationException.new(::Thrift::ApplicationException::MISSING_RESULT, 'greeting failed: unknown result')
    end

    def yo(name)
      send_yo(name)
    end

    def send_yo(name)
      send_oneway_message('yo', Yo_args, :name => name)
    end
    def oops()
      send_oops()
      recv_oops()
    end

    def send_oops()
      send_message('oops', Oops_args)
    end

    def recv_oops()
      result = receive_message(Oops_result)
      raise result.a unless result.a.nil?
      return
    end

  end

  class Processor
    include ::Thrift::Processor

    def process_greeting(seqid, iprot, oprot)
      args = read_args(iprot, Greeting_args)
      result = Greeting_result.new()
      result.success = @handler.greeting(args.name)
      write_result(result, oprot, 'greeting', seqid)
    end

    def process_yo(seqid, iprot, oprot)
      args = read_args(iprot, Yo_args)
      @handler.yo(args.name)
      return
    end

    def process_oops(seqid, iprot, oprot)
      args = read_args(iprot, Oops_args)
      result = Oops_result.new()
      begin
        @handler.oops()
      rescue ::OopsException => a
        result.a = a
      end
      write_result(result, oprot, 'oops', seqid)
    end

  end

  # HELPER FUNCTIONS AND STRUCTURES

  class Greeting_args
    include ::Thrift::Struct, ::Thrift::Struct_Union
    NAME = 1

    FIELDS = {
      NAME => {:type => ::Thrift::Types::STRING, :name => 'name'}
    }

    def struct_fields; FIELDS; end

    def validate
    end

    ::Thrift::Struct.generate_accessors self
  end

  class Greeting_result
    include ::Thrift::Struct, ::Thrift::Struct_Union
    SUCCESS = 0

    FIELDS = {
      SUCCESS => {:type => ::Thrift::Types::STRING, :name => 'success'}
    }

    def struct_fields; FIELDS; end

    def validate
    end

    ::Thrift::Struct.generate_accessors self
  end

  class Yo_args
    include ::Thrift::Struct, ::Thrift::Struct_Union
    NAME = 1

    FIELDS = {
      NAME => {:type => ::Thrift::Types::STRING, :name => 'name'}
    }

    def struct_fields; FIELDS; end

    def validate
    end

    ::Thrift::Struct.generate_accessors self
  end

  class Yo_result
    include ::Thrift::Struct, ::Thrift::Struct_Union

    FIELDS = {

    }

    def struct_fields; FIELDS; end

    def validate
    end

    ::Thrift::Struct.generate_accessors self
  end

  class Oops_args
    include ::Thrift::Struct, ::Thrift::Struct_Union

    FIELDS = {

    }

    def struct_fields; FIELDS; end

    def validate
    end

    ::Thrift::Struct.generate_accessors self
  end

  class Oops_result
    include ::Thrift::Struct, ::Thrift::Struct_Union
    A = 1

    FIELDS = {
      A => {:type => ::Thrift::Types::STRUCT, :name => 'a', :class => ::OopsException}
    }

    def struct_fields; FIELDS; end

    def validate
    end

    ::Thrift::Struct.generate_accessors self
  end

end

